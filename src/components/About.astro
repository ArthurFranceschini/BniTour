---
import Pin from '../assets/Icons/Pin.svg';
import Car from '../assets/Icons/Car.svg';
import Ticket from '../assets/Icons/Ticket.svg';
import PlaceholderImage1 from '../assets/image/Placeholder/Placeholder 1.webp';
import PlaceholderImage2 from '../assets/image/Placeholder/Placeholder 2.webp'
import { ChevronRight } from 'lucide-astro';
---

<section id='About' class="section-padding section-reveal flex flex-col md:flex-row items-stretch">
  
  <div class="relative z-10 p-4 md:p-8 flex flex-col w-full md:w-1/2">
    <button class="btn-nav mb-8 text-black mt-6 inline-flex w-fit items-center gap-2
         transition-all duration-150 ease-in-out active:scale-95 active:opacity-75"
>
  <span class="button-content-initial-text">Próximo Guia</span>
  <div class="btn-cta-icon-wrapper button-content-initial-icon bg-black rounded-full">
    <ChevronRight size={20} color="white" />
  </div>
</button>
   <div class="mb-8 flex flex-col items-start w-full text-left">
   <h1 class='text-black title-reveal text-left'>Por Que Escolher a BNI Tour?</h1>
   <h2 class='subtitle-reveal mt-4 text-left'>Não Somos uma Empresa, Somos a Sua Ideia de Viagem Perfeita.</h2>
</div>
   <div class="allign-left space-y-8 mt-8">
     <div class="flex items-center icon-reveal">
       <Car height={96} width="auto"/>
       <div class="flex flex-col ml-4"> 
         <h2>Lorem Ipsum</h2>
         <h2 class="mt-2">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</h2>
       </div>
     </div>

     <div class="flex items-center icon-reveal">
       <Ticket height={96} width="auto"/>
       <div class="flex flex-col ml-4">
         <h2>Lorem Ipsum</h2>
         <h2 class="mt-2">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</h2>
       </div>
     </div>

     <div class="flex items-center icon-reveal">
       <Pin height={96} width="auto"/>
       <div class="flex flex-col ml-4">
         <h2>Lorem Ipsum</h2>
         <h2 class="mt-2">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</h2>
       </div>
     </div>
   </div>
  </div>

  <div class="relative w-full md:w-1/2 flex items-center justify-center min-h-[300px] md:min-h-0 p-4 overflow-hidden">
    <img src={PlaceholderImage1.src}
         alt="Primeira imagem da colagem"
         class="absolute w-[70%] h-[70%] object-cover -translate-x-[20%] -translate-y-[20%] z-10 rounded-lg border-8 border-white transition-transform duration-500 hover:scale-105"
         loading="lazy">
    <img src={PlaceholderImage2.src}
         alt="Segunda imagem da colagem"
         class="absolute w-[70%] h-[70%] object-cover translate-x-[20%] translate-y-[20%] rounded-lg border-8 border-white transition-transform duration-500 hover:scale-105"
         loading="lazy">
  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const sections = document.querySelectorAll('.section-reveal');
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('section-reveal-active');
        
        const h1Element = entry.target.querySelector('h1.title-reveal');
        if (h1Element) {
          setTimeout(() => {
            h1Element.classList.add('is-visible');
          }, 400); 
        }
        
       
        const iconElements = entry.target.querySelectorAll('.icon-reveal');
        const iconStartDelay = 800; 
        const iconStagger = 200; 
        setTimeout(() => {
          iconElements.forEach((icon, index) => {
            setTimeout(() => {
              icon.classList.add('is-visible');
            }, index * iconStagger); 
          });
        }, iconStartDelay); 

    
        const h2Element = entry.target.querySelector('h2.subtitle-reveal');
        if (h2Element) {
        
          const numberOfIcons = iconElements.length;
          const lastIconAnimationStartTime = numberOfIcons > 0 ? iconStartDelay + (numberOfIcons - 1) * iconStagger : iconStartDelay;
          const h2AppearanceDelay = lastIconAnimationStartTime + 300; 
          
          setTimeout(() => {
            h2Element.classList.add('is-visible');
          }, h2AppearanceDelay);
        }
       
      }
    });
  }, { threshold: 0.1 }); 

  sections.forEach(section => observer.observe(section));
});
</script>