---
import { ChevronRight } from 'lucide-astro';
import FlagBR from '../assets/Icons/flag-br.svg?raw';
import FlagEUA from '../assets/Icons/flag-usa.svg?raw';
import FlagESP from '../assets/Icons/flag-esp.svg?raw';
---

<header class="section-padding flex items-center header-fade-in relative w-full bg-white z-50 transition-colors duration-300">
    <div class="flex items-center justify-between w-full">
        
        <div class="flex-shrink-0">
            <a href='/' class="btn-nav border-1 border-black text-black header-btn">
                <span class="button-content-initial-text" data-translate="header.cta">Fale Conosco</span>
                <div class="btn-cta-icon-wrapper button-content-initial-icon bg-black">
                    <ChevronRight size={20} class="text-white" />
                </div>
            </a>
        </div>

        <div class="absolute left-1/2 transform -translate-x-1/2">
            <img src="/logoipsum-332.svg" alt="Logo" class="h-8">
        </div>
        
        <div class="flex items-center gap-4">
            <div class="flex gap-4 nav-links">
                <a href="/" class="nav-item hover:text-white" data-translate="header.home">In√≠cio</a>
                <a href="/" class="nav-item" data-translate="header.tours">Passeios</a>
                <a href="/" class="nav-item" data-translate="header.about">Sobre</a>
                <a href="/" class="nav-item" data-translate="header.testimonials">Depoimentos</a>
            </div>
            
            <div class="language-switcher-container">
                <button id="language-dropdown-btn" class="language-btn">
                    <div id="current-flag" class="flag-icon" set:html={FlagBR}></div>
                    <span id="current-lang">PT</span>
                    <svg class="dropdown-arrow" width="12" height="12" viewBox="0 0 12 12">
                        <path d="M3 4.5L6 7.5L9 4.5" stroke="currentColor" stroke-width="1.5" fill="none"/>
                    </svg>
                </button>
                
                <div id="language-dropdown" class="language-dropdown hidden">
                    <button data-lang="pt" class="lang-option active">
                        <div class="flag-icon" set:html={FlagBR}></div>
                        <span>Portugu√™s</span>
                    </button>
                    <button data-lang="en" class="lang-option">
                        <div class="flag-icon" set:html={FlagEUA}></div>
                        <span>English</span>
                    </button>
                    <button data-lang="es" class="lang-option">
                        <div class="flag-icon" set:html={FlagESP}></div>
                        <span>Espa√±ol</span>
                    </button>
                </div>
            </div>

            <a href='/' class="btn-cta border-1 border-black text-black header-btn">
                <span class="button-content-initial-text" data-translate="header.blog">Blog</span>
                <div class="btn-cta-icon-wrapper button-content-initial-icon bg-black">
                    <ChevronRight size={20} class="text-white" />
                </div>
            </a>
        </div>
    </div>
</header>

<script is:inline define:vars={{ FlagBR, FlagEUA, FlagESP }}>
    // Evita m√∫ltiplas inst√¢ncias
    if (window.globalTranslator) {
        console.log('üîÑ GlobalTranslator j√° existe, reutilizando...');
    } else {
        console.log('üöÄ Criando novo GlobalTranslator...');
        
        const languages = {
            pt: { name: 'Portugu√™s', flag: FlagBR, code: 'pt-BR' },
            en: { name: 'English', flag: FlagEUA, code: 'en-US' },
            es: { name: 'Espa√±ol', flag: FlagESP, code: 'es-ES' }
        };

        // Tradu√ß√µes diretas no c√≥digo
        const translations = {
            pt: {
                'header.cta': "Fale Conosco",
                'header.home': "In√≠cio",
                'header.tours': "Passeios",
                'header.about': "Sobre",
                'header.testimonials': "Depoimentos",
                'header.blog': "Blog",
                'hero.cta.discover': "Conhe√ßa mais destinos...",
                'hero.title': "Sua Viagem para Foz do Igua√ßu.<br> Experi√™ncias Sob Medida, Mem√≥rias Para Sempre.",
                'hero.subtitle': "Esque√ßa o estresse. A BNI Tour transforma sua viagem em Foz do Igua√ßu, Paraguai e Argentina em um roteiro premium, exclusivo e inesquec√≠vel. Seu desejo √© nosso guia...",
                'hero.cta.plan': "Planeje Sua Viagem Agora!",
                'hero.cta.tours': "Passeios"
            },
            en: {
                'header.cta': "Contact Us",
                'header.home': "Home",
                'header.tours': "Tours",
                'header.about': "About",
                'header.testimonials': "Testimonials",
                'header.blog': "Blog",
                'hero.cta.discover': "Discover more destinations...",
                'hero.title': "Your Trip to Foz do Igua√ßu.<br> Tailor-made Experiences, Memories Forever.",
                'hero.subtitle': "Forget the stress. BNI Tour transforms your trip to Foz do Igua√ßu, Paraguay, and Argentina into a premium, exclusive, and unforgettable experience. Your desire is our guide...",
                'hero.cta.plan': "Plan Your Trip Now!",
                'hero.cta.tours': "Tours"
            },
            es: {
                'header.cta': "Cont√°ctenos",
                'header.home': "Inicio",
                'header.tours': "Tours",
                'header.about': "Acerca de",
                'header.testimonials': "Testimonios",
                'header.blog': "Blog",
                'hero.cta.discover': "Descubre m√°s destinos...",
                'hero.title': "Tu Viaje a Foz do Igua√ßu.<br> Experiencias a Medida, Recuerdos para Siempre.",
                'hero.subtitle': "Olv√≠date del estr√©s. BNI Tour transforma tu viaje a Foz do Igua√ßu, Paraguay y Argentina en un itinerario premium, exclusivo e inolvidable. Tu deseo es nuestra gu√≠a...",
                'hero.cta.plan': "¬°Planifica Tu Viaje Ahora!",
                'hero.cta.tours': "Paseos"
            }
        };

        class GlobalTranslator {
            constructor() {
                this.currentLanguage = 'pt';
                this.translations = translations;
            }

            init() {
                console.log('üöÄ Inicializando tradutor...');
                this.loadSavedLanguage();
                
                setTimeout(() => {
                    this.translateAll();
                }, 100);
            }

            setLanguage(lang) {
                console.log('üåç Mudando idioma para:', lang);
                
                if (this.translations[lang]) {
                    const oldLanguage = this.currentLanguage;
                    this.currentLanguage = lang;
                    
                    console.log('üîÑ Executando tradu√ß√£o...');
                    this.translateAll();
                    
                    this.saveLanguage(lang);
                    this.dispatchLanguageChangeEvent(lang, oldLanguage);
                    
                    console.log('‚úÖ Idioma alterado com sucesso!');
                } else {
                    console.error('‚ùå Idioma n√£o encontrado:', lang);
                }
            }

            translateAll() {
                console.log('üîÑ Traduzindo tudo para:', this.currentLanguage);
                
                const elements = document.querySelectorAll('[data-translate]');
                console.log('üìù Total de elementos encontrados:', elements.length);
                
                let translatedCount = 0;
                
                elements.forEach((element, index) => {
                    const key = element.getAttribute('data-translate');
                    
                    if (key) {
                        const translation = this.translations[this.currentLanguage]?.[key];
                        
                        if (translation) {
                            if (key.startsWith('header.')) {
                                element.textContent = translation;
                            } else {
                                element.innerHTML = translation;
                            }
                            translatedCount++;
                            console.log(`‚úÖ [${index}] ${key} ‚Üí "${translation}"`);
                        } else {
                            console.warn(`‚ö†Ô∏è Tradu√ß√£o n√£o encontrada: ${key}`);
                        }
                    }
                });
                
                console.log(`üéØ Total traduzido: ${translatedCount}/${elements.length}`);
            }

            saveLanguage(lang) {
                localStorage.setItem('preferred-language', lang);
            }

            loadSavedLanguage() {
                const saved = localStorage.getItem('preferred-language');
                if (saved && this.translations[saved]) {
                    this.currentLanguage = saved;
                    console.log('üìñ Idioma carregado:', saved);
                }
            }

            dispatchLanguageChangeEvent(newLang, oldLang) {
                console.log('üì° Disparando evento languageChanged');
                
                const event = new CustomEvent('languageChanged', {
                    detail: { 
                        newLanguage: newLang, 
                        oldLanguage: oldLang 
                    }
                });
                
                setTimeout(() => {
                    document.dispatchEvent(event);
                }, 50);
            }

            getCurrentLanguage() {
                return this.currentLanguage;
            }
        }

        window.globalTranslator = new GlobalTranslator();
        window.languages = languages;
    }

    document.addEventListener('DOMContentLoaded', () => {
        console.log('üöÄ Header carregado');
        
        window.globalTranslator.init();
        
        setTimeout(() => {
            updateDropdownDisplay(window.globalTranslator.getCurrentLanguage());
        }, 200);

        const dropdownBtn = document.getElementById('language-dropdown-btn');
        const dropdown = document.getElementById('language-dropdown');
        const langOptions = document.querySelectorAll('.lang-option');

        if (dropdownBtn && dropdown) {
            dropdownBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                dropdown.classList.toggle('hidden');
            });

            document.addEventListener('click', (e) => {
                if (e.target && !dropdownBtn.contains(e.target) && !dropdown.contains(e.target)) {
                    dropdown.classList.add('hidden');
                }
            });
        }

        langOptions.forEach(option => {
            option.addEventListener('click', (e) => {
                e.stopPropagation();
                const lang = option.dataset.lang;
                
                if (lang) {
                    console.log('üéØ Clique no idioma:', lang);
                    
                    window.globalTranslator.setLanguage(lang);
                    updateDropdownDisplay(lang);
                    updateActiveOption(lang);
                    
                    if (dropdown) dropdown.classList.add('hidden');
                }
            });
        });

        const header = document.querySelector('.header-fade-in');
        if (header) {
            setTimeout(() => header.classList.add('is-visible'), 200);
        }

        const navItems = document.querySelectorAll('.nav-item');
        setTimeout(() => {
            navItems.forEach((item, index) => {
                setTimeout(() => item.classList.add('is-revealed'), index * 100);
            });
        }, 600);

        const headerBtns = document.querySelectorAll('.header-btn');
        setTimeout(() => {
            headerBtns.forEach((btn, index) => {
                setTimeout(() => btn.classList.add('is-revealed'), index * 200);
            });
        }, 1000);

        const langSwitcher = document.querySelector('.language-switcher-container');
        if (langSwitcher) {
            setTimeout(() => langSwitcher.classList.add('is-revealed'), 800);
        }
    });

    function updateDropdownDisplay(lang) {
        const currentFlag = document.getElementById('current-flag');
        const currentLang = document.getElementById('current-lang');
        
        if (currentFlag && currentLang && window.languages[lang]) {
            currentFlag.innerHTML = window.languages[lang].flag;
            currentLang.textContent = lang.toUpperCase();
        }
    }

    function updateActiveOption(lang) {
        document.querySelectorAll('.lang-option').forEach(option => {
            option.classList.remove('active');
            if (option.dataset.lang === lang) {
                option.classList.add('active');
            }
        });
    }
</script>